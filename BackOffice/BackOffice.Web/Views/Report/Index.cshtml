
@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Mis Plantillas";
    Layout = MVC.Shared.Views._Layout;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Mis Plantillas</label>

            <div id="loading"></div>
            <div id="divGridReport"></div>

            <label>Configuración de Campos</label>
            <div id="divGridReport_Detail"></div>

        </div>
    </div>
</div>

<div id="templates" style="display:none;">

    <div id="divGridReport_ShortcutToolTipTemplate">
        <img class="divGrid_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Nuevo (alt+shift+n) - Guardar (alt+shift+g) - Descartar (alt+shift+d) " />
    </div>

    <div id="divGridReport_Detail_ViewEnablesTemplate">
        <label class="POBOProviderGridVerSoloTrue">Ver solo los habilitados</label>
        <input class="POBOProviderGridEnableContact" id="divGridReport_Detail_ViewEnable" type="checkbox" checked="checked" />
    </div>


</div>



@{
    Model.RenderScripts = true;

    //ger CertificationTypeValues
    string oReportInfoOptionList = "[]";
    if (Model.ProviderOptions != null &&
        Model.ProviderOptions.Count > 0)
    {
        var temp = Model.ProviderOptions;

        Model.ProviderOptions.Where(x => x.CatalogId == 2017 //GeneralInfo
                                      || x.CatalogId == 2018 //LegalInfo
                                      || x.CatalogId == 2019 //FinancialInfo
                                      || x.CatalogId == 2020 //CommercialInfo
                                      || x.CatalogId == 2021 //HseqInfo
                                      || x.CatalogId == 2022 //AditionalInfo
                                      || x.CatalogId == 2023 //Tracing

        ).All(x =>
        {
            if (
                //BASICINFO
                x.ItemId != 2017001
                && x.ItemId != 2017002
                && x.ItemId != 2017003
                && x.ItemId != 2017004
                && x.ItemId != 2017005
                && x.ItemId != 2017006
                && x.ItemId != 2017018
                && x.ItemId != 2017019

                //HSEQ
                && x.ItemId != 2021007
                && x.ItemId != 2021008
                && x.ItemId != 2021009

                //TRACING
                && x.ItemId != 2023001
                && x.ItemId != 2023002
                && x.ItemId != 2023003
                && x.ItemId != 2023004
                && x.ItemId != 2023005
                && x.ItemId != 2023006

                )
            {
                x.ItemName = temp.FirstOrDefault(y => y.ItemId == Convert.ToInt32(x.ItemName)).ItemName;
            }

            return true;
        });



        Dictionary<int, List<ProveedoresOnLine.Company.Models.Util.CatalogModel>> oOptionAdminGeo =
Model.ProviderOptions.
GroupBy(x => x.CatalogId).
Select(x =>
new
{
    okey = x.Key,
    ovalue = Model.ProviderOptions.Where(y => y.CatalogId == x.Key).OrderBy(y => y.ItemName).ToList(),
}).ToDictionary(k => k.okey, v => v.ovalue);


        oReportInfoOptionList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
    Serialize(oOptionAdminGeo.Select(x => new { Key = x.Key, Value = x.Value }));
    }
}


@section inlinescripts{

    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model);

    <script type="text/javascript">
            var vReportInfoOptionList = @(Html.Raw(oReportInfoOptionList))
            $(document).ready(function () {

                ReportObject.Init({
                    ObjectId: 'divGridReport',
                    ObjectDetailId: 'divGridReport_Detail',
                    DateFormat: '',
                    ProviderOptions: vReportInfoOptionList,
                });

                ReportObject.RenderAsync();
            });
    </script>
}

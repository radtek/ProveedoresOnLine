
@model BackOffice.Models.Provider.ProviderViewModel

@{
    ViewBag.Title = "Generar Reporte";
    Layout = MVC.Shared.Views._Layout;
}

@*ESTE ES EL ENVUELTO COMPLETO DE MENU LATERAL Y CONTENIDO*@
<div class="POBOProviderWrapper">
    @*ESTE ES QUE TRAE EL PARCIAL QUE PINTA EL MENU LATERAL*@
    <div class="POBOProviderSideMenuWrapper">
        @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model)
    </div>
    <div class="POBOProviderContentWrapper">
        <div id="POBOProviderUpsertForm">
            <label class="POBOSectionTitles">Generar Reporte</label>

            <div id="loading"></div>
            <div id="divGridReport"></div>

           

        </div>
    </div>
</div>

<div id="templates" style="display:none;">

    <div id="divGridReport_ShortcutToolTipTemplate">
        <img class="divGrid_kbtooltip" src="@Url.Content(BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_InfoTooltip].Value)" title=" Descargar" />
    </div>

    <div id="divGridReport_Detail_ViewEnablesTemplate">
        <label class="POBOBalanceSheet_Detail">Ver solo los habilitados</label>
        <input class="POBOProviderGridEnableContact" id="divGridReport_Detail_ViewEnable" type="checkbox" checked="checked" />
    </div>

    
    <div id="divGridReport_GeneratedTK_Template">

        <label class="POBOBalanceSheet_Detail">NIT del Cliente</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="text" />

        <label class="POBOBalanceSheet_Detail">Fecha de inicial</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="date" />

        <label class="POBOBalanceSheet_Detail">Fecha Final</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="date" />
        <br>
        <br />

        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="button" value="Descargar" />
    </div>


    <div id="divGridReport_GeneratedEV_Template" name="divGridReport_GeneratedEV_Template" style="display:none;">

        <label class="POBOBalanceSheet_Detail">NIT del Proveedor</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="text" />

        <label class="POBOBalanceSheet_Detail">Evaluación</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="text" />

        <br>

        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="button" value="Descargar" />

    </div>

    <div id="divGridReport_GeneratedPOL_Template">

        <label class="POBOBalanceSheet_Detail">NIT del Cliente</label>
        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="text" />

        <br>

        <input class="POBOBalanceSheet_Detail" id="divGridReport_Detail_ViewEnable" type="button" value="Descargar" />

    </div> 

</div>




@{
    Model.RenderScripts = true;

    //ger CertificationTypeValues
    string oReportInfoOptionList = "[]";
    if (Model.ProviderOptions != null &&
        Model.ProviderOptions.Count > 0)
    {
        Dictionary<int, List<ProveedoresOnLine.Company.Models.Util.CatalogModel>> oOptionAdminGeo =
            Model.ProviderOptions.
            GroupBy(x => x.CatalogId).
            Select(x =>
                new
                {
                    okey = x.Key,
                    ovalue = Model.ProviderOptions.Where(y => y.CatalogId == x.Key).OrderBy(y => y.ItemName).ToList(),
                }).ToDictionary(k => k.okey, v => v.ovalue);

        oReportInfoOptionList = (new System.Web.Script.Serialization.JavaScriptSerializer()).
            Serialize(oOptionAdminGeo.Select(x => new { Key = x.Key, Value = x.Value }));
    }
}


@section inlinescripts{

    @Html.Partial(MVC.Shared.Views._P_ProviderMenu, Model);

    <script type="text/javascript">
            var vReportInfoOptionList = @(Html.Raw(oReportInfoOptionList))
            $(document).ready(function () {

                ReportObject.Init({
                    ObjectId: 'divGridReport',
                    ObjectDetailId: 'divGridReport_Detail',
                    DateFormat: '',
                    ProviderOptions: vReportInfoOptionList,
                    TypeInfo: "2"
                });

                ReportObject.RenderAsync();
            });
    </script>
}
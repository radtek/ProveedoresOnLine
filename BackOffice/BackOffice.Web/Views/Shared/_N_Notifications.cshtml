@{
    var cant = BackOffice.Models.General.SessionModel.NewNotifications == false ? 0 : BackOffice.Models.General.SessionModel.ListNotifications.Where(x => x.State == 2013002).ToList().Count;
}

<div id="Notification">
    <ul class="navbar navbar-right POMPNavbar">

        <li class="dropdown">
            <a class="dropdown-toggle count-info" data-toggle="dropdown" href="#" aria-expanded="true">
                <i class="fa fa-bell"></i>  
                @if (cant > 0)
                {
                    <span class="label label-warning">@cant</span>
                }
            </a>
            <ul class="dropdown-menu dropdown-alerts pre-scrollable" style="max-width: 350px; min-width : 280px;">
                @if (BackOffice.Models.General.SessionModel.NewNotifications)
                {
                    if (BackOffice.Models.General.SessionModel.ListNotifications != null)
                    {
                        foreach (var Notification in BackOffice.Models.General.SessionModel.ListNotifications.OrderByDescending(x => x.CreateDate))
                        {
                            var companyInfo = ProveedoresOnLine.Company.Controller.Company.CompanyGetBasicInfo(Notification.CompanyPublicId);

                            var NotificatioBody = Notification.ListNotificationInfo.SingleOrDefault(x => x.NotificationInfoType == 2008007) != null
                                                    ? Notification.ListNotificationInfo.SingleOrDefault(x => x.NotificationInfoType == 2008007).LargeValue
                                                    : "";

                            if (!string.IsNullOrEmpty(NotificatioBody))
                            {
                                if (NotificatioBody.Length > 50)
                                {
                                    NotificatioBody = NotificatioBody.Substring(0, 45) + "...";
                                }
                            }

                            var logo = companyInfo != null
                                ? companyInfo.CompanyInfo.Where(y => y.ItemInfoType.ItemId == 203005).Select(y => y.Value).FirstOrDefault()
                                : Notification.NotificationType == 2009001 // GeneralInfo
                                ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationIconGeneralInfo].Value.Trim()
                                : Notification.NotificationType == 2009002 //AdditionalInfo
                                ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationIconAdditionalInfo].Value.Trim()
                                : Notification.NotificationType == 2009003 //HSEQ 
                                ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationIconHSEQ].Value.Trim()
                                : "";

                            var UrlRedirection = Notification.NotificationType == 2009001 // GeneralInfo
                            ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationGeneralInfo_BO].Value.Trim() + Notification.CompanyPublicId
                            : Notification.NotificationType == 2009002 //AdditionalInfo
                            ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationAdditionalInfo_BO].Value.Trim() + Notification.CompanyPublicId
                            : Notification.NotificationType == 2009003 //HSEQ 
                            ? BackOffice.Models.General.InternalSettings.Instance[BackOffice.Models.General.Constants.C_Settings_NotificationHSEQ_BO].Value.Trim() + Notification.CompanyPublicId
                            : "#";

                            var classLeido = Notification.State == 2013002 ? "background : #EFF5F5;" : "";
                            <li style=" @classLeido border-bottom: solid 1px #dddddd; padding-bottom: 14px; padding-top: 4px;" >
                                @Html.Raw(
                                    Ajax.ActionLink(
                                                "[replacetext]",
                                                "ChangeStatusNotification",
                                                "Home",
                                                new
                                                {
                                                    idNotification = Notification.NotificationId
                                                },
                                                new AjaxOptions
                                                {
                                                    UpdateTargetId = "Notification",
                                                    InsertionMode = InsertionMode.Replace,
                                                    HttpMethod = "POST",
                                                    OnBegin = "window.open('" + UrlRedirection + "', '_blank')"
                                                },
                                                null)
                                    .ToHtmlString()
                                    .Replace("[replacetext]", "<img class=\"img img-circle\" style=\" border:none; width: 35px; height: 35px; margin-right: 10px;\" src=\"" + @logo + "\" />" + Notification.Label + "<br><em class=\"small\" style=\"padding-left: 30px; \">" + @NotificatioBody + "</em><span class=\"pull-right text-muted small\">" + Notification.CreateDate.ToShortDateString() + Notification.CreateDate.ToLongTimeString() + "</span>"))
                            </li>
                            
                        }
                    }

                    <li>
                        <div class="text-center link-block">
                            <a href="@Url.Action("Notifications","Home")">
                                <strong class="text-center"  >Ver Todas</strong>
                                <i class="fa fa-angle-right"></i>
                            </a>
                        </div>
                    </li>
                }
                else
                {
                    <li>
                        <a>
                            <div>
                                NO TIENE NINGUNA NOTIFICACIÓN
                            </div>
                        </a>
                    </li>
                }

            </ul>
        </li>
    </ul>
</div>

@Scripts.Render("~/Scripts/jquery.unobtrusive-ajax.min.js")

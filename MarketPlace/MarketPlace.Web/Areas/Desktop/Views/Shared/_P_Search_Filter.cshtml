@model MarketPlace.Models.Provider.ProviderSearchViewModel

@{
    List<Tuple<string, string, string>> lstSearchFilter = Model.GetlstSearchFilter();

    string strCustomEconomicActivity = string.Empty;

    if (MarketPlace.Models.General.SessionModel.CurrentCompany != null &&
        MarketPlace.Models.General.SessionModel.CurrentCompany.CompanyInfo != null)
    {
        strCustomEconomicActivity = MarketPlace.Models.General.SessionModel.CurrentCompany.CompanyInfo.
            Where(x => x.ItemInfoType.ItemId == (int)MarketPlace.Models.General.enumCompanyInfoType.CustomEconomicActivity).
            Select(x => x.ValueName).
            DefaultIfEmpty(string.Empty).
            FirstOrDefault();
    }

    //new function
    List<int> oCurrentModule = MarketPlace.Models.General.SessionModel.CurrentUserModules();
    List<int> oCurrentMenu = MarketPlace.Models.General.SessionModel.CurrentProviderMenu();
    List<int> oCurrentSubMenu = MarketPlace.Models.General.SessionModel.CurrentProviderSubMenu((int)MarketPlace.Models.General.enumProviderMenu.GeneralInfo);
}

@if (!Model.RenderScripts)
{
    <span class="POMPSideBlockTitle">Filtrar Por:</span>
    <ul class="POMPFilterCategoryList">
        @*new funtion*@
        @if (oCurrentMenu.Any(x => x == (int)MarketPlace.Models.General.enumProviderMenu.GeneralInfo))
        {
            //Pais Filter
            if (Model.CountryFilter != null && Model.CountryFilter.Count > 0)
            {
                <li>
                    <span>Pais</span>
                    <ul>
                        @foreach (var oFilterItem in Model.CountryFilter)
                        {
                            if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                             {
                        <li>
                            <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.Country)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                             }
                            else
                            {
                                if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                {
                        <li>
                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.Country)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
            //City Filter
            if (Model.CityFilter != null && Model.CityFilter.Count > 0)
            {
                <li>
                    <span>Ciudad</span>
                    <ul>
                        @foreach (var oFilterItem in Model.CityFilter)
                        {
                            if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                            {
                        <li>
                            <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.City)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                            }
                            else
                            {
                                if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                {
                        <li>
                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.City)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
            //Ica Filter
            if (Model.IcaFilter != null && Model.IcaFilter.Count > 0)
            {
                <li>
                    <span>ICA</span>
                    <ul>
                        @foreach (var oFilterItem in Model.IcaFilter)
                        {
                            if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                            {
                        <li>
                            <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.EconomicActivity)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                            }
                            else
                            {
                                if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                {
                        <li>
                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.EconomicActivity)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
            //BlackList Filter
            if (Model.BlackListFilter != null && Model.BlackListFilter.Count > 0)
            {
                <li>
                    <span>Proveedores en Listas Restrictivas</span>
                    <ul>
                        @foreach (var oFilterItem in Model.BlackListFilter)
                        {
                            if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                            {
                                <li>
                                    <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.RestrictiveListProvider)'}});" />
                                    <span>Proveedores En Listas Restrictivas (@oFilterItem.FilterCount) </span>
                                </li>
                            }
                            else
                            {
                                if (oFilterItem.FilterCount != 0 && oFilterItem.FilterType != "F")
                                {
                                    <li>
                                        <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.RestrictiveListProvider)'}});" />
                                        <span>Proveedores En Listas Restrictivas (@oFilterItem.FilterCount) </span>
                                    </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
            //Status Filter
            if (Model.StatusFilter != null && Model.StatusFilter.Count > 0)
            {
                <li>
                    <span>Estado</span>
                    <ul>
                        @foreach (var oFilterItem in Model.StatusFilter)
                        {
                            if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                            {
                        <li>
                            <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.ProviderStatus)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                            }
                            else
                            {
                                if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                {
                        <li>
                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.ProviderStatus)'}});" />
                            <span>@oFilterItem.FilterName (@oFilterItem.FilterCount) </span>
                        </li>
                                }
                            }
                        }
                    </ul>
                </li>
            }
            //My Providers Filter
            if (Model.MyProvidersFilter != null && Model.MyProvidersFilter.Count > 0)
            {
                bool ShowMyProviders = true;
                bool showOtherProviders = true;
                foreach (var oFilterItem in Model.MyProvidersFilter)
                {
                    if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                    { showOtherProviders = false; }
                }
                foreach (var oFilterItem in Model.OtherProvidersFilter)
                {
                    if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                    { ShowMyProviders = false; }
                }

                <li>
                    <span>Mis Proveedores</span>
                    <ul>
                        @if (ShowMyProviders)
                        {
                            foreach (var oFilterItem in Model.MyProvidersFilter)
                            {
                                if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                                {
                                    <li>
                                        <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.MyProviders)'}});" />
                                        <span>Mis Proveedores (@oFilterItem.FilterCount) </span>
                                    </li>                                    
                                }
                                else
                                {
                                    if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                    {
                                        <li>
                                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.MyProviders)'}});" />
                                            <span>Mis Proveedores (@oFilterItem.FilterCount) </span>
                                        </li>
                                    }
                                }
                            }
                        }
                    </ul>
                    <ul>
                        @if (showOtherProviders)
                        {
                            foreach (var oFilterItem in Model.OtherProvidersFilter)
                            {
                                if (lstSearchFilter.Any(x => x.Item1 == oFilterItem.FilterType.ToString()))
                                {
                                    <li>
                                        <input type="checkbox" checked="checked" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:false,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.OtherProviders)'}});" />
                                        <span>Otros Proveedores (@oFilterItem.FilterCount) </span>
                                    </li>
                                }
                                else
                                {
                                    if (oFilterItem.FilterCount != 0 && oFilterItem.FilterName != "")
                                    {
                                        <li>
                                            <input type="checkbox" onchange="javascript: Provider_SearchObject.Search({SearchFilter:{Enable:true,Value:'@(oFilterItem.FilterType + ";" + oFilterItem.FilterCount + ";" + (int)MarketPlace.Models.General.enumFilterType.OtherProviders)'}});" />
                                            <span>Otros Proveedores (@oFilterItem.FilterCount) </span>
                                        </li>
                                    }
                                }
                            }
                        }
                    </ul>
                </li>

            }
        }
    </ul>
}
